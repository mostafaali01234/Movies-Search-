{"version":3,"sources":["reportWebVitals.js","components/movie.jsx","components/movie-list.jsx","components/home.jsx","components/search.jsx","components/header.jsx","components/movieDetails.jsx","components/App2.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Movie","movie","genres","onDetails","img","poster_path","movieGenres","genre_ids","map","id","name","genre","className","width","src","alt","vote_average","to","title","onClick","release_date","slice","MovieList","movies","index","Title","Home","setSelectedDetails","setSelectedPath","setSelectedGenres","setMovies","setLoading","loading","errorMessage","searchLoading","useState","setGenres","useEffect","fetch","response","json","jsonResponse","results","response1","jsonResponse1","pathTitle","Search","searchValue","setSearchValue","useContext","SearchContext","searchFun","setSearchLoading","value","onChange","e","target","type","Header","text","click","setHome","href","MovieDetails","g","overview","createContext","App2","selectedDetails","selectedPath","selectedGenres","setErrorMessage","Fragment","Provider","setTimeout","total_results","Error","path","exact","render","from","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0348cfd6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Movie = ({ movie, genres, onDetails }) => {\r\n  const img = `http://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n\r\n  let movieGenres = movie.genre_ids.map((id) => {\r\n    let name;\r\n    genres.map((genre) => {\r\n      if (genre.id === id) {\r\n        name = genre.name;\r\n        return name;\r\n      }\r\n      return 0;\r\n    });\r\n    return name;\r\n  });\r\n\r\n  return movie.poster_path ? (\r\n    <div className=\"movie\">\r\n      <div className=\"images\">\r\n        <img width=\"200\" src={img} alt=\"Title\" />\r\n        <div className=\"movie-overlay\">\r\n          <p>{movie.vote_average} / 10</p>\r\n          <h5>\r\n            {movieGenres[0]} <br></br> {movieGenres[1]}\r\n          </h5>\r\n          <Link to={`/Movies-Search-/${movie.title}`}>\r\n            <button onClick={() => onDetails(movie, movieGenres, movie.title)}>\r\n              Details\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <h4>{movie.title}</h4>\r\n      <p>\r\n        {movie.release_date\r\n          ? movie.release_date.slice(0, 4)\r\n          : movie.release_date}\r\n      </p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Movie;\r\n","import Movie from \"./movie\";\r\n\r\nconst MovieList = ({ movies, genres, onDetails }) => {\r\n  return (\r\n    <div className=\"movies\">\r\n      {movies.map((movie, index) => (\r\n        <Movie\r\n          key={`${index}-${movie.Title}`}\r\n          movie={movie}\r\n          genres={genres}\r\n          onDetails={onDetails}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import \"../css/App.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport MovieList from \"./movie-list\";\r\n\r\nconst MOVIE_API_URL =\r\n  \"https://api.themoviedb.org/3/movie/popular?api_key=c9a37db220f30fead3da528299127d84&language=en-US&page=1\";\r\nconst GENRE_API_URL =\r\n  \"https://api.themoviedb.org/3/genre/movie/list?&api_key=c9a37db220f30fead3da528299127d84\";\r\n\r\nconst Home = ({\r\n  setSelectedDetails,\r\n  setSelectedPath,\r\n  setSelectedGenres,\r\n  setMovies,\r\n  movies,\r\n  setLoading,\r\n  loading,\r\n  errorMessage,\r\n  searchLoading,\r\n}) => {\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (searchLoading !== 0) {\r\n    } else {\r\n      fetch(MOVIE_API_URL)\r\n        .then((response) => response.json())\r\n        .then((jsonResponse) => {\r\n          setMovies(jsonResponse.results);\r\n          setLoading(false);\r\n        });\r\n\r\n      fetch(GENRE_API_URL)\r\n        .then((response1) => response1.json())\r\n        .then((jsonResponse1) => {\r\n          setGenres(jsonResponse1.genres);\r\n        });\r\n    }\r\n  }, [setMovies, setLoading, searchLoading]);\r\n\r\n  const onDetails = (movie, movieGenres, pathTitle) => {\r\n    setSelectedDetails(movie);\r\n    setSelectedGenres(movieGenres);\r\n    setSelectedPath(pathTitle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"bg-image\"></div>\r\n\r\n      {loading && !errorMessage ? (\r\n        <span>loading...</span>\r\n      ) : errorMessage ? (\r\n        <div className=\"errorMessage\">{errorMessage}</div>\r\n      ) : (\r\n        <MovieList movies={movies} genres={genres} onDetails={onDetails} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { SearchContext } from \"./App2\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  // const searchFunction = useContext(SearchContext);\r\n  const { searchFun, searchLoading, setSearchLoading } = useContext(\r\n    SearchContext\r\n  );\r\n\r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = (e) => {\r\n    // e.preventDefault();\r\n    searchFun(searchValue);\r\n    setSearchLoading(searchLoading + 1);\r\n    resetInputField();\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\">\r\n      <input\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type=\"text\"\r\n      />\r\n      <Link to={\"/Movies-Search-/\"} onClick={callSearchFunction}>\r\n        Search\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nimport Search from \"./search\";\r\n\r\nconst Header = ({ text, click, setHome }) => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <a href=\"/Movies-Search-/\">{text}</a>\r\n\r\n      <Search />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst MovieDetails = ({ movie, genres }) => {\r\n  const img = `http://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col sm\">\r\n          <h1>{movie.title}</h1>\r\n          <h2>\r\n            {movie.release_date\r\n              ? movie.release_date.slice(0, 4)\r\n              : movie.release_date}\r\n          </h2>\r\n          <h2>{genres.map((g, index) => (index ? \" / \" : \"\") + g)}</h2>\r\n          <h2>Rate: {movie.vote_average}/10</h2>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <img width=\"250\" src={img} alt=\"Title\" />\r\n        </div>\r\n\r\n        <div className=\"col sm\">\r\n          <h4> {movie.overview}</h4>\r\n        </div>\r\n\r\n        {/* ------------------------------------ */}\r\n\r\n        <div className=\"col hidden-sm\">\r\n          <h1>{movie.title}</h1>\r\n          <h2>{genres.map((g, index) => (index ? \" / \" : \"\") + g)}</h2>\r\n          <h2>\r\n            {movie.release_date\r\n              ? movie.release_date.slice(0, 4)\r\n              : movie.release_date}\r\n          </h2>\r\n          <h2>Rate: {movie.vote_average}/10</h2>\r\n          <h4> {movie.overview}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useState, createContext } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"../css/App.css\";\r\nimport Home from \"./home\";\r\nimport Header from \"./header\";\r\nimport MovieDetails from \"./movieDetails\";\r\n\r\nexport const SearchContext = createContext();\r\n\r\nconst App2 = () => {\r\n  const [selectedDetails, setSelectedDetails] = useState();\r\n  const [selectedPath, setSelectedPath] = useState();\r\n  const [selectedGenres, setSelectedGenres] = useState();\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchLoading, setSearchLoading] = useState(0);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const searchFun = (searchValue) => {\r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n\r\n    setTimeout(() => {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=c9a37db220f30fead3da528299127d84&language=en-US&query=${searchValue}&page=1&include_adult=false`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((jsonResponse) => {\r\n          if (jsonResponse.total_results >= 1) {\r\n            setMovies(jsonResponse.results);\r\n            setLoading(false);\r\n          } else {\r\n            setErrorMessage(jsonResponse.Error);\r\n            setLoading(false);\r\n          }\r\n        });\r\n    }, 50);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <React.Fragment>\r\n        <div className=\"bg-image\"></div>\r\n        <SearchContext.Provider\r\n          value={{ searchFun, searchLoading, setSearchLoading }}\r\n        >\r\n          <Header text=\"Movies Search\"></Header>\r\n        </SearchContext.Provider>\r\n\r\n        <Switch>\r\n          <Route\r\n            path=\"/Movies-Search-/\"\r\n            exact\r\n            render={() => (\r\n              <Home\r\n                setSelectedDetails={setSelectedDetails}\r\n                setSelectedPath={setSelectedPath}\r\n                setSelectedGenres={setSelectedGenres}\r\n                setMovies={setMovies}\r\n                movies={movies}\r\n                setLoading={setLoading}\r\n                loading={loading}\r\n                errorMessage={errorMessage}\r\n                searchLoading={searchLoading}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path={`/Movies-Search-/${selectedPath}/`}\r\n            render={() => (\r\n              <MovieDetails movie={selectedDetails} genres={selectedGenres} />\r\n            )}\r\n          />\r\n\r\n          <Redirect from=\"/\" to=\"/Movies-Search-/\" />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App2;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App2 from \"./components/App2\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}