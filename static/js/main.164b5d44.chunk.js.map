{"version":3,"sources":["components/search.jsx","components/header.jsx","components/movie.jsx","components/movieDetails.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Search","useState","searchValue","setSearchValue","searchFunction","useContext","SearchContext","className","value","onChange","e","target","type","onClick","preventDefault","Header","text","click","setHome","href","Movie","movie","genres","onDetails","img","poster_path","movieGenres","genre_ids","map","id","name","genre","width","src","alt","vote_average","to","title","release_date","slice","MovieDetails","g","index","overview","createContext","App","loading","setLoading","movies","setMovies","setGenres","errorMessage","setErrorMessage","homeClick","setHomeClick","selectedDetails","setSelectedDetails","selectedPath","setSelectedPath","selectedGenres","setSelectedGenres","useEffect","fetch","then","response","json","jsonResponse","results","response1","jsonResponse1","pathTitle","Provider","total_results","Error","exact","path","render","Title","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.164b5d44.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { SearchContext } from \"./App\";\r\n\r\nconst Search = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const searchFunction = useContext(SearchContext);\r\n\r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    searchFunction(searchValue);\r\n    resetInputField();\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\">\r\n      <input\r\n        value={searchValue}\r\n        onChange={handleSearchInputChanges}\r\n        type=\"text\"\r\n      />\r\n      <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Search from \"./search\";\r\n\r\nconst Header = ({ text, click, setHome }) => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <a\r\n        href=\"/\"\r\n        onClick={() => {\r\n          setHome(click + 1);\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n      <Search />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Movie = ({ movie, genres, onDetails }) => {\r\n  const img = `http://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n  let movieGenres = movie.genre_ids.map((id) => {\r\n    let name;\r\n    genres.map((genre) => {\r\n      if (genre.id == id) {\r\n        name = genre.name;\r\n        return name;\r\n      }\r\n    });\r\n    return name;\r\n  });\r\n\r\n  return movie.poster_path ? (\r\n    <div className=\"movie\">\r\n      <div className=\"images\">\r\n        <img width=\"200\" src={img} alt=\"Title\" />\r\n        <div className=\"movie-overlay\">\r\n          <p>{movie.vote_average} / 10</p>\r\n          <h5>\r\n            {movieGenres[0]} <br></br> {movieGenres[1]}\r\n          </h5>\r\n          <Link to={\"/Movies-Search-/\" + movie.title}>\r\n            <button onClick={() => onDetails(movie, movieGenres, movie.title)}>\r\n              Details\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <h4>{movie.title}</h4>\r\n      <p>\r\n        {movie.release_date\r\n          ? movie.release_date.slice(0, 4)\r\n          : movie.release_date}\r\n      </p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst MovieDetails = ({ movie, genres }) => {\r\n  const img = `http://image.tmdb.org/t/p/w500/${movie.poster_path}`;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col\">\r\n        <img width=\"250\" src={img} alt=\"Title\" />\r\n      </div>\r\n      <div className=\"col\">\r\n        <h1>{movie.title}</h1>\r\n        <h2>{genres.map((g, index) => (index ? \" / \" : \"\") + g)}</h2>\r\n        <h2>\r\n          {movie.release_date\r\n            ? movie.release_date.slice(0, 4)\r\n            : movie.release_date}\r\n        </h2>\r\n        <h2>Rate: {movie.vote_average}/10</h2>\r\n        <h4> {movie.overview}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import \"../css/App.css\";\nimport Header from \"./header\";\nimport Movie from \"./movie\";\nimport { useEffect, useState, createContext } from \"react\";\nimport MovieDetails from \"./movieDetails\";\nimport { BrowserRouter as Switch, Route, Redirect } from \"react-router-dom\";\n\nconst MOVIE_API_URL =\n  \"https://api.themoviedb.org/3/movie/popular?api_key=c9a37db220f30fead3da528299127d84&language=en-US&page=1\";\nconst GENRE_API_URL =\n  \"https://api.themoviedb.org/3/genre/movie/list?&api_key=c9a37db220f30fead3da528299127d84\";\n\nexport const SearchContext = createContext();\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [homeClick, setHomeClick] = useState(0);\n  const [selectedDetails, setSelectedDetails] = useState();\n  const [selectedPath, setSelectedPath] = useState();\n  const [selectedGenres, setSelectedGenres] = useState();\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        setMovies(jsonResponse.results);\n        setLoading(false);\n      });\n\n    fetch(GENRE_API_URL)\n      .then((response1) => response1.json())\n      .then((jsonResponse1) => {\n        setGenres(jsonResponse1.genres);\n      });\n  }, [homeClick]);\n\n  const searchFun = (searchValue) => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=c9a37db220f30fead3da528299127d84&language=en-US&query=${searchValue}&page=1&include_adult=false`\n    )\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (jsonResponse.total_results >= 1) {\n          setMovies(jsonResponse.results);\n          setLoading(false);\n        } else {\n          setErrorMessage(jsonResponse.Error);\n          setLoading(false);\n        }\n      });\n  };\n\n  const onDetails = (movie, movieGenres, pathTitle) => {\n    setSelectedDetails(movie);\n    setSelectedGenres(movieGenres);\n    setSelectedPath(pathTitle);\n  };\n\n  // console.log(selectedDetails);\n\n  return (\n    <div className=\"App\">\n      <div className=\"bg-image\"></div>\n\n      <SearchContext.Provider value={searchFun}>\n        <Header\n          text=\"Movies Search\"\n          click={homeClick}\n          setHome={setHomeClick}\n        ></Header>\n      </SearchContext.Provider>\n\n      <Switch>\n        <Route\n          exact\n          path=\"/Movies-Search-/\"\n          render={() => (\n            <div className=\"movies\">\n              {loading && !errorMessage ? (\n                <span>loading...</span>\n              ) : errorMessage ? (\n                <div className=\"errorMessage\">{errorMessage}</div>\n              ) : (\n                movies.map((movie, index) => (\n                  <Movie\n                    key={`${index}-${movie.Title}`}\n                    movie={movie}\n                    genres={genres}\n                    onDetails={onDetails}\n                  />\n                ))\n              )}\n            </div>\n          )}\n        />\n        <Route\n          path={\"/Movies-Search-/\" + selectedPath}\n          render={() => (\n            <MovieDetails movie={selectedDetails} genres={selectedGenres} />\n          )}\n        />\n        <Redirect from=\"/\" to=\"/Movies-Search-/\" />\n      </Switch>\n\n      {/* <Search search={search} />  */}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}